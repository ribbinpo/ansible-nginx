server {
  listen 80;
  listen [::]:80;

  server_name {{ DNS_NAME }} www.{{ DNS_NAME }};
  server_tokens off;

  location /.well-known/acme-challenge/ {
    root /var/www/certbot;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;

  server_name {{ DNS_NAME }} www.{{ DNS_NAME }};

  client_max_body_size 10m; # default 1mb

  ssl_certificate /etc/letsencrypt/live/{{ DNS_NAME }}/fullchain.pem;
  ssl_certificate_key /etc/letsencrypt/live/{{ DNS_NAME }}/privkey.pem;
  ssl_trusted_certificate /etc/letsencrypt/live/{{ DNS_NAME }}/chain.pem;

  ssl_protocols TLSv1.2 TLSv1.3;
  ssl_ciphers 'TLS_AES_256_GCM_SHA384:TLS_AES_128_GCM_SHA256:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-RSA-AES256-GCM-SHA384';
  ssl_prefer_server_ciphers on;
  ssl_session_cache shared:SSL:10m;
  ssl_session_timeout 1h;
  ssl_session_tickets off;

  # Security headers (HIGHLY recommended)
  add_header X-Frame-Options DENY;
  add_header X-Content-Type-Options nosniff;
  add_header X-XSS-Protection "1; mode=block";
  add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;

  location / {
    proxy_pass http://{{ PRIVATE_IP }}:{{ PORT }};
    proxy_http_version 1.1;
    # WebSocket and headers
    proxy_set_header Upgrade $http_upgrade;
    proxy_set_header Connection 'upgrade';
    proxy_set_header Host $host;
    proxy_cache_bypass $http_upgrade;
    # Forward real client IP
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    # Timeout
    proxy_read_timeout 300s;
    proxy_connect_timeout 300s;
    proxy_send_timeout 300s;
    send_timeout 300s;
    # Cookies
    proxy_pass_header Set-Cookie;
    # proxy_set_header Cookie $http_cookie;
  }
}